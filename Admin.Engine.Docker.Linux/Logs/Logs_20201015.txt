INFO  15-10-2020 13:32:31 NHibernate.Cfg.Environment [1] - NHibernate 5.1.3 (assembly 5.1.0.0) 
INFO  15-10-2020 13:32:31 NHibernate.Cfg.Environment [1] - hibernate-configuration section not found in application configuration file 
INFO  15-10-2020 13:32:31 NHibernate.Cfg.Environment [1] - Bytecode provider name : lcg 
INFO  15-10-2020 13:32:31 NHibernate.Cfg.Environment [1] - Using reflection optimizer 
DEBUG 15-10-2020 13:32:31 NHibernate.Cfg.Configuration [1] - Mapping XML:
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2"><class xmlns="urn:nhibernate-mapping-2.2" name="BookWarehouse.Repository.Models.SupplierContact, BookWarehouse.Repository, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" table="supplier_contact"><id name="Id" type="System.Guid, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e"><column name="Id" /><generator class="guid.native" /></id><property name="ContactType" type="BookWarehouse.Common.Enum.ContactType, BookWarehouse.Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"><column name="ContactType" not-null="true" /></property><property name="Value" type="System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e"><column name="Value" not-null="true" /></property><many-to-one class="BookWarehouse.Repository.Models.Supplier, BookWarehouse.Repository, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" foreign-key="fk_supplier_id" lazy="proxy" name="Supplier"><column name="supplier_id" not-null="true" /></many-to-one></class></hibernate-mapping> 
INFO  15-10-2020 13:32:31 NHibernate.Dialect.Dialect [1] - Using dialect: NHibernate.Dialect.MsSql2012Dialect 
INFO  15-10-2020 13:32:31 NHibernate.Cfg.XmlHbmBinding.Binder [1] - Mapping class: BookWarehouse.Repository.Models.SupplierContact -> supplier_contact 
DEBUG 15-10-2020 13:32:31 NHibernate.Cfg.XmlHbmBinding.Binder [1] - Mapped property: Id -> Id, type: Guid 
DEBUG 15-10-2020 13:32:31 NHibernate.Cfg.XmlHbmBinding.Binder [1] - Mapped property: ContactType -> ContactType, type: NHibernate.Type.EnumType`1[[BookWarehouse.Common.Enum.ContactType, BookWarehouse.Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], NHibernate 
DEBUG 15-10-2020 13:32:31 NHibernate.Cfg.XmlHbmBinding.Binder [1] - Mapped property: Value -> Value, type: String 
DEBUG 15-10-2020 13:32:31 NHibernate.Cfg.XmlHbmBinding.Binder [1] - Mapped property: Supplier -> supplier_id, type: BookWarehouse.Repository.Models.Supplier 
DEBUG 15-10-2020 13:32:32 NHibernate.Cfg.Configuration [1] - Mapping XML:
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2"><class xmlns="urn:nhibernate-mapping-2.2" name="BookWarehouse.Repository.Models.Supplier, BookWarehouse.Repository, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" table="supplier"><id name="Id" type="System.Guid, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e"><column name="Id" /><generator class="guid.native" /></id><bag lazy="true" name="Contact"><key foreign-key="fk_supplier_id"><column name="id" /></key><one-to-many class="BookWarehouse.Repository.Models.SupplierContact, BookWarehouse.Repository, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" /></bag><property name="Name" type="System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e"><column name="Name" length="50" not-null="true" /></property><property name="Address" type="System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e"><column name="Address" length="255" not-null="true" /></property><property name="City" type="System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e"><column name="City" not-null="true" /></property><property name="PostCode" type="System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e"><column name="PostCode" length="5" not-null="true" /></property></class></hibernate-mapping> 
INFO  15-10-2020 13:32:32 NHibernate.Dialect.Dialect [1] - Using dialect: NHibernate.Dialect.MsSql2012Dialect 
INFO  15-10-2020 13:32:32 NHibernate.Cfg.XmlHbmBinding.Binder [1] - Mapping class: BookWarehouse.Repository.Models.Supplier -> supplier 
DEBUG 15-10-2020 13:32:32 NHibernate.Cfg.XmlHbmBinding.Binder [1] - Mapped property: Id -> Id, type: Guid 
DEBUG 15-10-2020 13:32:32 NHibernate.Cfg.XmlHbmBinding.Binder [1] - Mapped property: Contact, type: System.Collections.Generic.ICollection`1[[BookWarehouse.Repository.Models.SupplierContact, BookWarehouse.Repository, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]](BookWarehouse.Repository.Models.Supplier.Contact) 
DEBUG 15-10-2020 13:32:32 NHibernate.Cfg.XmlHbmBinding.Binder [1] - Mapped property: Name -> Name, type: String 
DEBUG 15-10-2020 13:32:32 NHibernate.Cfg.XmlHbmBinding.Binder [1] - Mapped property: Address -> Address, type: String 
DEBUG 15-10-2020 13:32:32 NHibernate.Cfg.XmlHbmBinding.Binder [1] - Mapped property: City -> City, type: String 
DEBUG 15-10-2020 13:32:32 NHibernate.Cfg.XmlHbmBinding.Binder [1] - Mapped property: PostCode -> PostCode, type: String 
INFO  15-10-2020 13:32:32 NHibernate.Dialect.Dialect [1] - Using dialect: NHibernate.Dialect.MsSql2012Dialect 
INFO  15-10-2020 13:32:32 NHibernate.Tool.hbm2ddl.SchemaValidator [1] - Running schema validator 
INFO  15-10-2020 13:32:32 NHibernate.Tool.hbm2ddl.SchemaValidator [1] - fetching database metadata 
INFO  15-10-2020 13:32:32 NHibernate.Connection.ConnectionProviderFactory [1] - Initializing connection provider: NHibernate.Connection.DriverConnectionProvider 
INFO  15-10-2020 13:32:32 NHibernate.Connection.ConnectionProvider [1] - Configuring ConnectionProvider 
INFO  15-10-2020 13:32:32 NHibernate.Dialect.Dialect [1] - Using dialect: NHibernate.Dialect.MsSql2012Dialect 
DEBUG 15-10-2020 13:32:32 NHibernate.Connection.DriverConnectionProvider [1] - Obtaining DbConnection from Driver 
ERROR 15-10-2020 13:32:53 NHibernate.Tool.hbm2ddl.SchemaValidator [1] - could not get database metadata System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.) ---> System.ComponentModel.Win32Exception (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   at System.Data.SqlClient.SqlConnection.Open()
   at NHibernate.Connection.DriverConnectionProvider.GetConnection()
   at NHibernate.Tool.hbm2ddl.ManagedProviderConnectionHelper.Prepare()
   at NHibernate.Tool.hbm2ddl.SchemaValidator.Validate()
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:10060,State:0,Class:20

ERROR 15-10-2020 13:32:53 NHibernate.Tool.hbm2ddl.SchemaValidator [1] - could not complete schema validation System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.) ---> System.ComponentModel.Win32Exception (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   at System.Data.SqlClient.SqlConnection.Open()
   at NHibernate.Connection.DriverConnectionProvider.GetConnection()
   at NHibernate.Tool.hbm2ddl.ManagedProviderConnectionHelper.Prepare()
   at NHibernate.Tool.hbm2ddl.SchemaValidator.Validate()
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:10060,State:0,Class:20

INFO  15-10-2020 13:32:53 NHibernate.Dialect.Dialect [1] - Using dialect: NHibernate.Dialect.MsSql2012Dialect 
INFO  15-10-2020 13:32:53 NHibernate.Cfg.Configuration [1] - checking mappings queue 
INFO  15-10-2020 13:32:53 NHibernate.Cfg.Configuration [1] - processing one-to-many association mappings 
DEBUG 15-10-2020 13:32:53 NHibernate.Cfg.XmlHbmBinding.Binder [1] - Second pass for collection: BookWarehouse.Repository.Models.Supplier.Contact 
INFO  15-10-2020 13:32:53 NHibernate.Cfg.XmlHbmBinding.Binder [1] - mapping collection: BookWarehouse.Repository.Models.Supplier.Contact -> supplier_contact 
DEBUG 15-10-2020 13:32:53 NHibernate.Cfg.XmlHbmBinding.Binder [1] - Mapped collection key: id, one-to-many: BookWarehouse.Repository.Models.SupplierContact 
INFO  15-10-2020 13:32:53 NHibernate.Cfg.Configuration [1] - processing one-to-one association property references 
INFO  15-10-2020 13:32:53 NHibernate.Cfg.Configuration [1] - processing foreign key constraints 
DEBUG 15-10-2020 13:32:53 NHibernate.Cfg.Configuration [1] - resolving reference to class: BookWarehouse.Repository.Models.Supplier 
DEBUG 15-10-2020 13:32:53 NHibernate.Cfg.Configuration [1] - resolving reference to class: BookWarehouse.Repository.Models.Supplier 
INFO  15-10-2020 13:32:53 NHibernate.Cfg.Configuration [1] - processing filters (second pass) 
INFO  15-10-2020 13:32:53 NHibernate.Cfg.Configuration [1] - checking mappings queue 
INFO  15-10-2020 13:32:53 NHibernate.Cfg.Configuration [1] - processing one-to-many association mappings 
INFO  15-10-2020 13:32:53 NHibernate.Cfg.Configuration [1] - processing one-to-one association property references 
INFO  15-10-2020 13:32:53 NHibernate.Cfg.Configuration [1] - processing foreign key constraints 
DEBUG 15-10-2020 13:32:53 NHibernate.Cfg.Configuration [1] - resolving reference to class: BookWarehouse.Repository.Models.Supplier 
DEBUG 15-10-2020 13:32:53 NHibernate.Cfg.Configuration [1] - resolving reference to class: BookWarehouse.Repository.Models.Supplier 
INFO  15-10-2020 13:32:53 NHibernate.Cfg.Configuration [1] - processing filters (second pass) 
INFO  15-10-2020 13:32:53 NHibernate.Dialect.Dialect [1] - Using dialect: NHibernate.Dialect.MsSql2012Dialect 
INFO  15-10-2020 13:32:53 NHibernate.Dialect.Dialect [1] - Using dialect: NHibernate.Dialect.MsSql2012Dialect 
INFO  15-10-2020 13:32:53 NHibernate.Dialect.Dialect [1] - Using dialect: NHibernate.Dialect.MsSql2012Dialect 
INFO  15-10-2020 13:32:53 NHibernate.Dialect.Dialect [1] - Using dialect: NHibernate.Dialect.MsSql2012Dialect 
INFO  15-10-2020 13:32:53 NHibernate.Dialect.Dialect [1] - Using dialect: NHibernate.Dialect.MsSql2012Dialect 
INFO  15-10-2020 13:32:53 NHibernate.Dialect.Dialect [1] - Using dialect: NHibernate.Dialect.MsSql2012Dialect 
INFO  15-10-2020 13:32:53 NHibernate.Dialect.Dialect [1] - Using dialect: NHibernate.Dialect.MsSql2012Dialect 
INFO  15-10-2020 13:32:53 NHibernate.Dialect.Dialect [1] - Using dialect: NHibernate.Dialect.MsSql2012Dialect 
INFO  15-10-2020 13:32:53 NHibernate.Dialect.Dialect [1] - Using dialect: NHibernate.Dialect.MsSql2012Dialect 
DEBUG 15-10-2020 13:32:53 NHibernate.Tool.hbm2ddl.SchemaExport [1] - 
    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[fk_supplier_id]') and parent_object_id = OBJECT_ID(N'supplier_contact'))
alter table supplier_contact  drop constraint fk_supplier_id
 
DEBUG 15-10-2020 13:32:53 NHibernate.Tool.hbm2ddl.SchemaExport [1] - 
    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[fk_supplier_id]') and parent_object_id = OBJECT_ID(N'supplier_contact'))
alter table supplier_contact  drop constraint fk_supplier_id
 
DEBUG 15-10-2020 13:32:53 NHibernate.Tool.hbm2ddl.SchemaExport [1] - 
    if exists (select * from dbo.sysobjects where id = object_id(N'supplier_contact') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table supplier_contact 
DEBUG 15-10-2020 13:32:53 NHibernate.Tool.hbm2ddl.SchemaExport [1] - 
    if exists (select * from dbo.sysobjects where id = object_id(N'supplier') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table supplier 
DEBUG 15-10-2020 13:32:53 NHibernate.Tool.hbm2ddl.SchemaExport [1] - 
    create table supplier_contact (
        Id UNIQUEIDENTIFIER not null,
       ContactType INT not null,
       Value NVARCHAR(255) not null,
       supplier_id UNIQUEIDENTIFIER not null,
       primary key (Id)
    ) 
DEBUG 15-10-2020 13:32:53 NHibernate.Tool.hbm2ddl.SchemaExport [1] - 
    create table supplier (
        Id UNIQUEIDENTIFIER not null,
       Name NVARCHAR(50) not null,
       Address NVARCHAR(255) not null,
       City NVARCHAR(255) not null,
       PostCode NVARCHAR(5) not null,
       primary key (Id)
    ) 
DEBUG 15-10-2020 13:32:53 NHibernate.Tool.hbm2ddl.SchemaExport [1] - 
    alter table supplier_contact 
        add constraint fk_supplier_id 
        foreign key (supplier_id) 
        references supplier 
DEBUG 15-10-2020 13:32:53 NHibernate.Tool.hbm2ddl.SchemaExport [1] - 
    alter table supplier_contact 
        add constraint fk_supplier_id 
        foreign key (id) 
        references supplier 
INFO  15-10-2020 13:32:53 NHibernate.Dialect.Dialect [1] - Using dialect: NHibernate.Dialect.MsSql2012Dialect 
INFO  15-10-2020 13:32:53 NHibernate.Tool.hbm2ddl.SchemaUpdate [1] - Running hbm2ddl schema update 
INFO  15-10-2020 13:32:53 NHibernate.Tool.hbm2ddl.SchemaUpdate [1] - fetching database metadata 
INFO  15-10-2020 13:32:53 NHibernate.Connection.ConnectionProviderFactory [1] - Initializing connection provider: NHibernate.Connection.DriverConnectionProvider 
INFO  15-10-2020 13:32:53 NHibernate.Connection.ConnectionProvider [1] - Configuring ConnectionProvider 
INFO  15-10-2020 13:32:53 NHibernate.Dialect.Dialect [1] - Using dialect: NHibernate.Dialect.MsSql2012Dialect 
DEBUG 15-10-2020 13:32:53 NHibernate.Connection.DriverConnectionProvider [1] - Obtaining DbConnection from Driver 
ERROR 15-10-2020 13:32:53 NHibernate.Tool.hbm2ddl.SchemaUpdate [1] - could not get database metadata System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.) ---> System.ComponentModel.Win32Exception (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   at System.Data.SqlClient.SqlConnection.Open()
   at NHibernate.Connection.DriverConnectionProvider.GetConnection()
   at NHibernate.Tool.hbm2ddl.ManagedProviderConnectionHelper.Prepare()
   at NHibernate.Tool.hbm2ddl.SchemaUpdate.Execute(Action`1 scriptAction, Boolean doUpdate)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:10060,State:0,Class:20

ERROR 15-10-2020 13:32:53 NHibernate.Tool.hbm2ddl.SchemaUpdate [1] - could not complete schema update System.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.) ---> System.ComponentModel.Win32Exception (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   at System.Data.SqlClient.SqlConnection.Open()
   at NHibernate.Connection.DriverConnectionProvider.GetConnection()
   at NHibernate.Tool.hbm2ddl.ManagedProviderConnectionHelper.Prepare()
   at NHibernate.Tool.hbm2ddl.SchemaUpdate.Execute(Action`1 scriptAction, Boolean doUpdate)
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:10060,State:0,Class:20

INFO  15-10-2020 13:32:53 NHibernate.Cfg.Configuration [1] - checking mappings queue 
INFO  15-10-2020 13:32:53 NHibernate.Cfg.Configuration [1] - processing one-to-many association mappings 
INFO  15-10-2020 13:32:53 NHibernate.Cfg.Configuration [1] - processing one-to-one association property references 
INFO  15-10-2020 13:32:53 NHibernate.Cfg.Configuration [1] - processing foreign key constraints 
DEBUG 15-10-2020 13:32:53 NHibernate.Cfg.Configuration [1] - resolving reference to class: BookWarehouse.Repository.Models.Supplier 
DEBUG 15-10-2020 13:32:53 NHibernate.Cfg.Configuration [1] - resolving reference to class: BookWarehouse.Repository.Models.Supplier 
INFO  15-10-2020 13:32:53 NHibernate.Cfg.Configuration [1] - processing filters (second pass) 
INFO  15-10-2020 13:32:53 NHibernate.Dialect.Dialect [1] - Using dialect: NHibernate.Dialect.MsSql2012Dialect 
INFO  15-10-2020 13:32:53 NHibernate.Dialect.Dialect [1] - Using dialect: NHibernate.Dialect.MsSql2012Dialect 
INFO  15-10-2020 13:32:53 NHibernate.Exceptions.SQLExceptionConverterFactory [1] - Using dialect defined converter 
INFO  15-10-2020 13:32:53 NHibernate.Cfg.SettingsFactory [1] - Generate SQL with comments: disabled 
INFO  15-10-2020 13:32:53 NHibernate.Connection.ConnectionProviderFactory [1] - Initializing connection provider: NHibernate.Connection.DriverConnectionProvider 
INFO  15-10-2020 13:32:53 NHibernate.Connection.ConnectionProvider [1] - Configuring ConnectionProvider 
INFO  15-10-2020 13:32:53 NHibernate.Dialect.Dialect [1] - Using dialect: NHibernate.Dialect.MsSql2012Dialect 
INFO  15-10-2020 13:32:53 NHibernate.Cfg.SettingsFactory [1] - Transaction factory: NHibernate.Transaction.AdoNetWithSystemTransactionFactory 
INFO  15-10-2020 13:32:53 NHibernate.Cfg.SettingsFactory [1] - Optimize cache for minimal puts: False 
INFO  15-10-2020 13:32:53 NHibernate.Cfg.SettingsFactory [1] - Connection release mode: auto 
INFO  15-10-2020 13:32:53 NHibernate.Cfg.SettingsFactory [1] - Default batch fetch size: 1 
INFO  15-10-2020 13:32:53 NHibernate.Cfg.SettingsFactory [1] - echoing all SQL to stdout 
INFO  15-10-2020 13:32:53 NHibernate.Cfg.SettingsFactory [1] - Statistics: disabled 
INFO  15-10-2020 13:32:53 NHibernate.Cfg.SettingsFactory [1] - Deleted entity synthetic identifier rollback: disabled 
INFO  15-10-2020 13:32:53 NHibernate.Cfg.SettingsFactory [1] - Query translator: NHibernate.Hql.Ast.ANTLR.ASTQueryTranslatorFactory 
INFO  15-10-2020 13:32:53 NHibernate.Cfg.SettingsFactory [1] - Query provider: NHibernate.Linq.DefaultQueryProvider 
INFO  15-10-2020 13:32:53 NHibernate.Cfg.SettingsFactory [1] - Query language substitutions: {'true'='1', 'false'='0', 'yes'=''Y'', 'no'=''N''} 
INFO  15-10-2020 13:32:53 NHibernate.Cfg.SettingsFactory [1] - cache provider: NHibernate.Cache.NoCacheProvider, NHibernate, Version=5.1.0.0, Culture=neutral, PublicKeyToken=aa95f207798dfdb4 
INFO  15-10-2020 13:32:53 NHibernate.Cfg.SettingsFactory [1] - Order SQL inserts for batching: enabled 
INFO  15-10-2020 13:32:53 NHibernate.Cfg.SettingsFactory [1] - Order SQL updates for batching: disabled 
DEBUG 15-10-2020 13:32:53 NHibernate.Cfg.SettingsFactory [1] - Wrap result sets: disabled 
DEBUG 15-10-2020 13:32:53 NHibernate.Cfg.SettingsFactory [1] - Batch versioned data: disabled 
INFO  15-10-2020 13:32:53 NHibernate.Cfg.SettingsFactory [1] - Batcher factory: NHibernate.AdoNet.GenericBatchingBatcherFactory, NHibernate, Version=5.1.0.0, Culture=neutral, PublicKeyToken=aa95f207798dfdb4 
INFO  15-10-2020 13:32:53 NHibernate.Cfg.SettingsFactory [1] - Default flush mode: Auto 
INFO  15-10-2020 13:32:53 NHibernate.Cfg.SettingsFactory [1] - Named query checking : enabled 
DEBUG 15-10-2020 13:32:53 NHibernate.Cfg.SettingsFactory [1] - Track session id: enabled 
INFO  15-10-2020 13:32:53 NHibernate.Impl.SessionFactoryImpl [1] - building session factory 
DEBUG 15-10-2020 13:32:53 NHibernate.Impl.SessionFactoryImpl [1] - Session factory constructed with filter configurations : {} 
DEBUG 15-10-2020 13:32:53 NHibernate.Impl.SessionFactoryImpl [1] - instantiating session factory with properties: {'use_reflection_optimizer'='True', 'connection.provider'='NHibernate.Connection.DriverConnectionProvider', 'connection.driver_class'='NHibernate.Driver.Sql2008ClientDriver, NHibernate, Version=5.1.0.0, Culture=neutral, PublicKeyToken=aa95f207798dfdb4', 'dialect'='NHibernate.Dialect.MsSql2012Dialect, NHibernate, Version=5.1.0.0, Culture=neutral, PublicKeyToken=aa95f207798dfdb4', 'hibernate.dialect'='NHibernate.Dialect.MsSql2012Dialect, NHibernate, Version=5.1.0.0, Culture=neutral, PublicKeyToken=aa95f207798dfdb4', 'show_sql'='true', 'format_sql'='true', 'connection.connection_string'='Server=tcp:192.168.99.100,1433;Database=finalproject;User ID=sa;Password=QBoothcamp2020'} 
DEBUG 15-10-2020 13:32:53 NHibernate.Connection.DriverConnectionProvider [1] - Obtaining DbConnection from Driver 
INFO  15-10-2020 13:46:41 NHibernate.Cfg.Environment [1] - NHibernate 5.1.3 (assembly 5.1.0.0) 
INFO  15-10-2020 13:46:41 NHibernate.Cfg.Environment [1] - hibernate-configuration section not found in application configuration file 
INFO  15-10-2020 13:46:41 NHibernate.Cfg.Environment [1] - Bytecode provider name : lcg 
INFO  15-10-2020 13:46:41 NHibernate.Cfg.Environment [1] - Using reflection optimizer 
DEBUG 15-10-2020 13:46:41 NHibernate.Cfg.Configuration [1] - Mapping XML:
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2"><class xmlns="urn:nhibernate-mapping-2.2" name="BookWarehouse.Repository.Models.SupplierContact, BookWarehouse.Repository, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" table="supplier_contact"><id name="Id" type="System.Guid, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e"><column name="Id" /><generator class="guid.native" /></id><property name="ContactType" type="BookWarehouse.Common.Enum.ContactType, BookWarehouse.Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"><column name="ContactType" not-null="true" /></property><property name="Value" type="System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e"><column name="Value" not-null="true" /></property><many-to-one class="BookWarehouse.Repository.Models.Supplier, BookWarehouse.Repository, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" foreign-key="fk_supplier_id" lazy="proxy" name="Supplier"><column name="supplier_id" not-null="true" /></many-to-one></class></hibernate-mapping> 
INFO  15-10-2020 13:46:42 NHibernate.Dialect.Dialect [1] - Using dialect: NHibernate.Dialect.MsSql2012Dialect 
INFO  15-10-2020 13:46:42 NHibernate.Cfg.XmlHbmBinding.Binder [1] - Mapping class: BookWarehouse.Repository.Models.SupplierContact -> supplier_contact 
DEBUG 15-10-2020 13:46:42 NHibernate.Cfg.XmlHbmBinding.Binder [1] - Mapped property: Id -> Id, type: Guid 
DEBUG 15-10-2020 13:46:42 NHibernate.Cfg.XmlHbmBinding.Binder [1] - Mapped property: ContactType -> ContactType, type: NHibernate.Type.EnumType`1[[BookWarehouse.Common.Enum.ContactType, BookWarehouse.Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], NHibernate 
DEBUG 15-10-2020 13:46:42 NHibernate.Cfg.XmlHbmBinding.Binder [1] - Mapped property: Value -> Value, type: String 
DEBUG 15-10-2020 13:46:42 NHibernate.Cfg.XmlHbmBinding.Binder [1] - Mapped property: Supplier -> supplier_id, type: BookWarehouse.Repository.Models.Supplier 
DEBUG 15-10-2020 13:46:42 NHibernate.Cfg.Configuration [1] - Mapping XML:
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2"><class xmlns="urn:nhibernate-mapping-2.2" name="BookWarehouse.Repository.Models.Supplier, BookWarehouse.Repository, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" table="supplier"><id name="Id" type="System.Guid, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e"><column name="Id" /><generator class="guid.native" /></id><bag lazy="true" name="Contact"><key foreign-key="fk_supplier_id"><column name="id" /></key><one-to-many class="BookWarehouse.Repository.Models.SupplierContact, BookWarehouse.Repository, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" /></bag><property name="Name" type="System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e"><column name="Name" length="50" not-null="true" /></property><property name="Address" type="System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e"><column name="Address" length="255" not-null="true" /></property><property name="City" type="System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e"><column name="City" not-null="true" /></property><property name="PostCode" type="System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e"><column name="PostCode" length="5" not-null="true" /></property></class></hibernate-mapping> 
INFO  15-10-2020 13:46:42 NHibernate.Dialect.Dialect [1] - Using dialect: NHibernate.Dialect.MsSql2012Dialect 
INFO  15-10-2020 13:46:42 NHibernate.Cfg.XmlHbmBinding.Binder [1] - Mapping class: BookWarehouse.Repository.Models.Supplier -> supplier 
DEBUG 15-10-2020 13:46:42 NHibernate.Cfg.XmlHbmBinding.Binder [1] - Mapped property: Id -> Id, type: Guid 
DEBUG 15-10-2020 13:46:42 NHibernate.Cfg.XmlHbmBinding.Binder [1] - Mapped property: Contact, type: System.Collections.Generic.ICollection`1[[BookWarehouse.Repository.Models.SupplierContact, BookWarehouse.Repository, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]](BookWarehouse.Repository.Models.Supplier.Contact) 
DEBUG 15-10-2020 13:46:42 NHibernate.Cfg.XmlHbmBinding.Binder [1] - Mapped property: Name -> Name, type: String 
DEBUG 15-10-2020 13:46:42 NHibernate.Cfg.XmlHbmBinding.Binder [1] - Mapped property: Address -> Address, type: String 
DEBUG 15-10-2020 13:46:42 NHibernate.Cfg.XmlHbmBinding.Binder [1] - Mapped property: City -> City, type: String 
DEBUG 15-10-2020 13:46:42 NHibernate.Cfg.XmlHbmBinding.Binder [1] - Mapped property: PostCode -> PostCode, type: String 
INFO  15-10-2020 13:46:42 NHibernate.Dialect.Dialect [1] - Using dialect: NHibernate.Dialect.MsSql2012Dialect 
INFO  15-10-2020 13:46:42 NHibernate.Tool.hbm2ddl.SchemaValidator [1] - Running schema validator 
INFO  15-10-2020 13:46:42 NHibernate.Tool.hbm2ddl.SchemaValidator [1] - fetching database metadata 
INFO  15-10-2020 13:46:42 NHibernate.Connection.ConnectionProviderFactory [1] - Initializing connection provider: NHibernate.Connection.DriverConnectionProvider 
INFO  15-10-2020 13:46:42 NHibernate.Connection.ConnectionProvider [1] - Configuring ConnectionProvider 
INFO  15-10-2020 13:46:42 NHibernate.Dialect.Dialect [1] - Using dialect: NHibernate.Dialect.MsSql2012Dialect 
DEBUG 15-10-2020 13:46:42 NHibernate.Connection.DriverConnectionProvider [1] - Obtaining DbConnection from Driver 
INFO  15-10-2020 13:46:42 NHibernate.Cfg.Configuration [1] - checking mappings queue 
INFO  15-10-2020 13:46:42 NHibernate.Cfg.Configuration [1] - processing one-to-many association mappings 
DEBUG 15-10-2020 13:46:42 NHibernate.Cfg.XmlHbmBinding.Binder [1] - Second pass for collection: BookWarehouse.Repository.Models.Supplier.Contact 
INFO  15-10-2020 13:46:42 NHibernate.Cfg.XmlHbmBinding.Binder [1] - mapping collection: BookWarehouse.Repository.Models.Supplier.Contact -> supplier_contact 
DEBUG 15-10-2020 13:46:42 NHibernate.Cfg.XmlHbmBinding.Binder [1] - Mapped collection key: id, one-to-many: BookWarehouse.Repository.Models.SupplierContact 
INFO  15-10-2020 13:46:42 NHibernate.Cfg.Configuration [1] - processing one-to-one association property references 
INFO  15-10-2020 13:46:42 NHibernate.Cfg.Configuration [1] - processing foreign key constraints 
DEBUG 15-10-2020 13:46:42 NHibernate.Cfg.Configuration [1] - resolving reference to class: BookWarehouse.Repository.Models.Supplier 
DEBUG 15-10-2020 13:46:42 NHibernate.Cfg.Configuration [1] - resolving reference to class: BookWarehouse.Repository.Models.Supplier 
INFO  15-10-2020 13:46:42 NHibernate.Cfg.Configuration [1] - processing filters (second pass) 
INFO  15-10-2020 13:46:42 NHibernate.Dialect.Schema.ITableMetadata [1] - table found: finalproject.dbo.supplier_contact 
INFO  15-10-2020 13:46:42 NHibernate.Dialect.Schema.ITableMetadata [1] - columns: Id, ContactType, Value, supplier_id 
INFO  15-10-2020 13:46:42 NHibernate.Dialect.Dialect [1] - Using dialect: NHibernate.Dialect.MsSql2012Dialect 
INFO  15-10-2020 13:46:42 NHibernate.Dialect.Dialect [1] - Using dialect: NHibernate.Dialect.MsSql2012Dialect 
INFO  15-10-2020 13:46:42 NHibernate.Dialect.Dialect [1] - Using dialect: NHibernate.Dialect.MsSql2012Dialect 
INFO  15-10-2020 13:46:42 NHibernate.Dialect.Dialect [1] - Using dialect: NHibernate.Dialect.MsSql2012Dialect 
INFO  15-10-2020 13:46:42 NHibernate.Dialect.Schema.ITableMetadata [1] - table found: finalproject.dbo.supplier 
INFO  15-10-2020 13:46:42 NHibernate.Dialect.Schema.ITableMetadata [1] - columns: Id, Name, Address, City, PostCode 
INFO  15-10-2020 13:46:42 NHibernate.Dialect.Dialect [1] - Using dialect: NHibernate.Dialect.MsSql2012Dialect 
INFO  15-10-2020 13:46:42 NHibernate.Dialect.Dialect [1] - Using dialect: NHibernate.Dialect.MsSql2012Dialect 
INFO  15-10-2020 13:46:42 NHibernate.Dialect.Dialect [1] - Using dialect: NHibernate.Dialect.MsSql2012Dialect 
INFO  15-10-2020 13:46:42 NHibernate.Dialect.Dialect [1] - Using dialect: NHibernate.Dialect.MsSql2012Dialect 
INFO  15-10-2020 13:46:42 NHibernate.Dialect.Dialect [1] - Using dialect: NHibernate.Dialect.MsSql2012Dialect 
DEBUG 15-10-2020 13:46:42 NHibernate.Connection.ConnectionProvider [1] - Closing connection 
INFO  15-10-2020 13:46:42 NHibernate.Dialect.Dialect [1] - Using dialect: NHibernate.Dialect.MsSql2012Dialect 
INFO  15-10-2020 13:46:42 NHibernate.Tool.hbm2ddl.SchemaUpdate [1] - Running hbm2ddl schema update 
INFO  15-10-2020 13:46:42 NHibernate.Tool.hbm2ddl.SchemaUpdate [1] - fetching database metadata 
INFO  15-10-2020 13:46:42 NHibernate.Connection.ConnectionProviderFactory [1] - Initializing connection provider: NHibernate.Connection.DriverConnectionProvider 
INFO  15-10-2020 13:46:42 NHibernate.Connection.ConnectionProvider [1] - Configuring ConnectionProvider 
INFO  15-10-2020 13:46:42 NHibernate.Dialect.Dialect [1] - Using dialect: NHibernate.Dialect.MsSql2012Dialect 
DEBUG 15-10-2020 13:46:42 NHibernate.Connection.DriverConnectionProvider [1] - Obtaining DbConnection from Driver 
INFO  15-10-2020 13:46:42 NHibernate.Tool.hbm2ddl.SchemaUpdate [1] - updating schema 
INFO  15-10-2020 13:46:42 NHibernate.Cfg.Configuration [1] - checking mappings queue 
INFO  15-10-2020 13:46:42 NHibernate.Cfg.Configuration [1] - processing one-to-many association mappings 
INFO  15-10-2020 13:46:42 NHibernate.Cfg.Configuration [1] - processing one-to-one association property references 
INFO  15-10-2020 13:46:42 NHibernate.Cfg.Configuration [1] - processing foreign key constraints 
DEBUG 15-10-2020 13:46:42 NHibernate.Cfg.Configuration [1] - resolving reference to class: BookWarehouse.Repository.Models.Supplier 
DEBUG 15-10-2020 13:46:42 NHibernate.Cfg.Configuration [1] - resolving reference to class: BookWarehouse.Repository.Models.Supplier 
INFO  15-10-2020 13:46:42 NHibernate.Cfg.Configuration [1] - processing filters (second pass) 
INFO  15-10-2020 13:46:42 NHibernate.Dialect.Schema.ITableMetadata [1] - table found: finalproject.dbo.supplier_contact 
INFO  15-10-2020 13:46:42 NHibernate.Dialect.Schema.ITableMetadata [1] - columns: Id, ContactType, Value, supplier_id 
INFO  15-10-2020 13:46:42 NHibernate.Dialect.Schema.ITableMetadata [1] - foreign keys: fk_supplier_id 
INFO  15-10-2020 13:46:42 NHibernate.Dialect.Schema.ITableMetadata [1] - indexes: PK__supplier__3214EC07B2996C4E 
INFO  15-10-2020 13:46:42 NHibernate.Dialect.Schema.ITableMetadata [1] - table found: finalproject.dbo.supplier 
INFO  15-10-2020 13:46:42 NHibernate.Dialect.Schema.ITableMetadata [1] - columns: Id, Name, Address, City, PostCode 
INFO  15-10-2020 13:46:42 NHibernate.Dialect.Schema.ITableMetadata [1] - foreign keys:  
INFO  15-10-2020 13:46:42 NHibernate.Dialect.Schema.ITableMetadata [1] - indexes: PK__supplier__3214EC0733C7E3B8 
INFO  15-10-2020 13:46:42 NHibernate.Tool.hbm2ddl.SchemaUpdate [1] - schema update complete 
DEBUG 15-10-2020 13:46:42 NHibernate.Connection.ConnectionProvider [1] - Closing connection 
INFO  15-10-2020 13:46:42 NHibernate.Cfg.Configuration [1] - checking mappings queue 
INFO  15-10-2020 13:46:42 NHibernate.Cfg.Configuration [1] - processing one-to-many association mappings 
INFO  15-10-2020 13:46:42 NHibernate.Cfg.Configuration [1] - processing one-to-one association property references 
INFO  15-10-2020 13:46:42 NHibernate.Cfg.Configuration [1] - processing foreign key constraints 
DEBUG 15-10-2020 13:46:42 NHibernate.Cfg.Configuration [1] - resolving reference to class: BookWarehouse.Repository.Models.Supplier 
DEBUG 15-10-2020 13:46:42 NHibernate.Cfg.Configuration [1] - resolving reference to class: BookWarehouse.Repository.Models.Supplier 
INFO  15-10-2020 13:46:42 NHibernate.Cfg.Configuration [1] - processing filters (second pass) 
INFO  15-10-2020 13:46:42 NHibernate.Dialect.Dialect [1] - Using dialect: NHibernate.Dialect.MsSql2012Dialect 
INFO  15-10-2020 13:46:42 NHibernate.Dialect.Dialect [1] - Using dialect: NHibernate.Dialect.MsSql2012Dialect 
INFO  15-10-2020 13:46:43 NHibernate.Exceptions.SQLExceptionConverterFactory [1] - Using dialect defined converter 
INFO  15-10-2020 13:46:43 NHibernate.Cfg.SettingsFactory [1] - Generate SQL with comments: disabled 
INFO  15-10-2020 13:46:43 NHibernate.Connection.ConnectionProviderFactory [1] - Initializing connection provider: NHibernate.Connection.DriverConnectionProvider 
INFO  15-10-2020 13:46:43 NHibernate.Connection.ConnectionProvider [1] - Configuring ConnectionProvider 
INFO  15-10-2020 13:46:43 NHibernate.Dialect.Dialect [1] - Using dialect: NHibernate.Dialect.MsSql2012Dialect 
INFO  15-10-2020 13:46:43 NHibernate.Cfg.SettingsFactory [1] - Transaction factory: NHibernate.Transaction.AdoNetWithSystemTransactionFactory 
INFO  15-10-2020 13:46:43 NHibernate.Cfg.SettingsFactory [1] - Optimize cache for minimal puts: False 
INFO  15-10-2020 13:46:43 NHibernate.Cfg.SettingsFactory [1] - Connection release mode: auto 
INFO  15-10-2020 13:46:43 NHibernate.Cfg.SettingsFactory [1] - Default batch fetch size: 1 
INFO  15-10-2020 13:46:43 NHibernate.Cfg.SettingsFactory [1] - echoing all SQL to stdout 
INFO  15-10-2020 13:46:43 NHibernate.Cfg.SettingsFactory [1] - Statistics: disabled 
INFO  15-10-2020 13:46:43 NHibernate.Cfg.SettingsFactory [1] - Deleted entity synthetic identifier rollback: disabled 
INFO  15-10-2020 13:46:43 NHibernate.Cfg.SettingsFactory [1] - Query translator: NHibernate.Hql.Ast.ANTLR.ASTQueryTranslatorFactory 
INFO  15-10-2020 13:46:43 NHibernate.Cfg.SettingsFactory [1] - Query provider: NHibernate.Linq.DefaultQueryProvider 
INFO  15-10-2020 13:46:43 NHibernate.Cfg.SettingsFactory [1] - Query language substitutions: {'true'='1', 'false'='0', 'yes'=''Y'', 'no'=''N''} 
INFO  15-10-2020 13:46:43 NHibernate.Cfg.SettingsFactory [1] - cache provider: NHibernate.Cache.NoCacheProvider, NHibernate, Version=5.1.0.0, Culture=neutral, PublicKeyToken=aa95f207798dfdb4 
INFO  15-10-2020 13:46:43 NHibernate.Cfg.SettingsFactory [1] - Order SQL inserts for batching: enabled 
INFO  15-10-2020 13:46:43 NHibernate.Cfg.SettingsFactory [1] - Order SQL updates for batching: disabled 
DEBUG 15-10-2020 13:46:43 NHibernate.Cfg.SettingsFactory [1] - Wrap result sets: disabled 
DEBUG 15-10-2020 13:46:43 NHibernate.Cfg.SettingsFactory [1] - Batch versioned data: disabled 
INFO  15-10-2020 13:46:43 NHibernate.Cfg.SettingsFactory [1] - Batcher factory: NHibernate.AdoNet.GenericBatchingBatcherFactory, NHibernate, Version=5.1.0.0, Culture=neutral, PublicKeyToken=aa95f207798dfdb4 
INFO  15-10-2020 13:46:43 NHibernate.Cfg.SettingsFactory [1] - Default flush mode: Auto 
INFO  15-10-2020 13:46:43 NHibernate.Cfg.SettingsFactory [1] - Named query checking : enabled 
DEBUG 15-10-2020 13:46:43 NHibernate.Cfg.SettingsFactory [1] - Track session id: enabled 
INFO  15-10-2020 13:46:43 NHibernate.Impl.SessionFactoryImpl [1] - building session factory 
DEBUG 15-10-2020 13:46:43 NHibernate.Impl.SessionFactoryImpl [1] - Session factory constructed with filter configurations : {} 
DEBUG 15-10-2020 13:46:43 NHibernate.Impl.SessionFactoryImpl [1] - instantiating session factory with properties: {'use_reflection_optimizer'='True', 'connection.provider'='NHibernate.Connection.DriverConnectionProvider', 'connection.driver_class'='NHibernate.Driver.Sql2008ClientDriver, NHibernate, Version=5.1.0.0, Culture=neutral, PublicKeyToken=aa95f207798dfdb4', 'dialect'='NHibernate.Dialect.MsSql2012Dialect, NHibernate, Version=5.1.0.0, Culture=neutral, PublicKeyToken=aa95f207798dfdb4', 'hibernate.dialect'='NHibernate.Dialect.MsSql2012Dialect, NHibernate, Version=5.1.0.0, Culture=neutral, PublicKeyToken=aa95f207798dfdb4', 'show_sql'='true', 'format_sql'='true', 'connection.connection_string'='Server=tcp:192.168.99.100,1433;Database=finalproject;User ID=sa;Password=QBoothcamp2020'} 
DEBUG 15-10-2020 13:46:43 NHibernate.Connection.DriverConnectionProvider [1] - Obtaining DbConnection from Driver 
DEBUG 15-10-2020 13:46:43 NHibernate.Connection.ConnectionProvider [1] - Closing connection 
INFO  15-10-2020 13:46:43 NHibernate.Dialect.Dialect [1] - Using dialect: NHibernate.Dialect.MsSql2012Dialect 
DEBUG 15-10-2020 13:46:43 NHibernate.Tuple.Entity.AbstractEntityTuplizer [1] - No custom accessors found for entity: BookWarehouse.Repository.Models.SupplierContact 
DEBUG 15-10-2020 13:46:43 NHibernate.Tuple.Entity.PocoEntityTuplizer [1] - Create Instantiator using optimizer for:BookWarehouse.Repository.Models.SupplierContact 
INFO  15-10-2020 13:46:43 NHibernate.Dialect.Dialect [1] - Using dialect: NHibernate.Dialect.MsSql2012Dialect 
DEBUG 15-10-2020 13:46:43 NHibernate.Tuple.Entity.AbstractEntityTuplizer [1] - No custom accessors found for entity: BookWarehouse.Repository.Models.Supplier 
DEBUG 15-10-2020 13:46:43 NHibernate.Tuple.Entity.PocoEntityTuplizer [1] - Create Instantiator using optimizer for:BookWarehouse.Repository.Models.Supplier 
DEBUG 15-10-2020 13:46:43 NHibernate.Persister.Collection.ICollectionPersister [1] - Static SQL for collection: BookWarehouse.Repository.Models.Supplier.Contact 
DEBUG 15-10-2020 13:46:43 NHibernate.Persister.Collection.ICollectionPersister [1] -  Row insert: UPDATE supplier_contact SET id = ? WHERE Id = ? 
DEBUG 15-10-2020 13:46:43 NHibernate.Persister.Collection.ICollectionPersister [1] -  Row delete: UPDATE supplier_contact SET id = null WHERE id = ? AND Id = ? 
DEBUG 15-10-2020 13:46:43 NHibernate.Persister.Collection.ICollectionPersister [1] -  One-shot delete: UPDATE supplier_contact SET id = null WHERE id = ? 
DEBUG 15-10-2020 13:46:43 NHibernate.Persister.Entity.AbstractEntityPersister [1] - Static SQL for entity: BookWarehouse.Repository.Models.SupplierContact 
DEBUG 15-10-2020 13:46:43 NHibernate.Persister.Entity.AbstractEntityPersister [1] -  Version select: SELECT Id FROM supplier_contact WHERE Id = ? 
DEBUG 15-10-2020 13:46:43 NHibernate.Persister.Entity.AbstractEntityPersister [1] -  Snapshot select: SELECT supplierco_.Id, supplierco_.ContactType as contacttype2_0_, supplierco_.Value as value3_0_, supplierco_.supplier_id as supplier4_0_ FROM supplier_contact supplierco_ WHERE supplierco_.Id=? 
DEBUG 15-10-2020 13:46:43 NHibernate.Persister.Entity.AbstractEntityPersister [1] -  Insert 0: INSERT INTO supplier_contact (ContactType, Value, supplier_id, Id) VALUES (?, ?, ?, ?) 
DEBUG 15-10-2020 13:46:43 NHibernate.Persister.Entity.AbstractEntityPersister [1] -  Update 0: UPDATE supplier_contact SET ContactType = ?, Value = ?, supplier_id = ? WHERE Id = ? 
DEBUG 15-10-2020 13:46:43 NHibernate.Persister.Entity.AbstractEntityPersister [1] -  Delete 0: DELETE FROM supplier_contact WHERE Id = ? 
DEBUG 15-10-2020 13:46:43 NHibernate.Loader.Entity.AbstractEntityLoader [1] - Static select for entity BookWarehouse.Repository.Models.SupplierContact: SELECT supplierco0_.Id as id1_0_0_, supplierco0_.ContactType as contacttype2_0_0_, supplierco0_.Value as value3_0_0_, supplierco0_.supplier_id as supplier4_0_0_ FROM supplier_contact supplierco0_ WHERE supplierco0_.Id=? 
DEBUG 15-10-2020 13:46:43 NHibernate.Loader.Entity.AbstractEntityLoader [1] - Static select for entity BookWarehouse.Repository.Models.SupplierContact: SELECT supplierco0_.Id as id1_0_0_, supplierco0_.ContactType as contacttype2_0_0_, supplierco0_.Value as value3_0_0_, supplierco0_.supplier_id as supplier4_0_0_ FROM supplier_contact supplierco0_ WHERE supplierco0_.Id=? 
DEBUG 15-10-2020 13:46:43 NHibernate.Loader.Entity.AbstractEntityLoader [1] - Static select for entity BookWarehouse.Repository.Models.SupplierContact: SELECT supplierco0_.Id as id1_0_0_, supplierco0_.ContactType as contacttype2_0_0_, supplierco0_.Value as value3_0_0_, supplierco0_.supplier_id as supplier4_0_0_ FROM supplier_contact supplierco0_ with (updlock, rowlock) WHERE supplierco0_.Id=? 
DEBUG 15-10-2020 13:46:43 NHibernate.Loader.Entity.AbstractEntityLoader [1] - Static select for entity BookWarehouse.Repository.Models.SupplierContact: SELECT supplierco0_.Id as id1_0_0_, supplierco0_.ContactType as contacttype2_0_0_, supplierco0_.Value as value3_0_0_, supplierco0_.supplier_id as supplier4_0_0_ FROM supplier_contact supplierco0_ with (updlock, rowlock, nowait) WHERE supplierco0_.Id=? 
DEBUG 15-10-2020 13:46:43 NHibernate.Loader.Entity.AbstractEntityLoader [1] - Static select for entity BookWarehouse.Repository.Models.SupplierContact: SELECT supplierco0_.Id as id1_0_0_, supplierco0_.ContactType as contacttype2_0_0_, supplierco0_.Value as value3_0_0_, supplierco0_.supplier_id as supplier4_0_0_ FROM supplier_contact supplierco0_ with (updlock, rowlock) WHERE supplierco0_.Id=? 
DEBUG 15-10-2020 13:46:43 NHibernate.Loader.Entity.AbstractEntityLoader [1] - Static select for action NHibernate.Engine.CascadingAction+MergeCascadingAction on entity BookWarehouse.Repository.Models.SupplierContact: SELECT supplierco0_.Id as id1_0_0_, supplierco0_.ContactType as contacttype2_0_0_, supplierco0_.Value as value3_0_0_, supplierco0_.supplier_id as supplier4_0_0_ FROM supplier_contact supplierco0_ WHERE supplierco0_.Id=? 
DEBUG 15-10-2020 13:46:43 NHibernate.Loader.Entity.AbstractEntityLoader [1] - Static select for action NHibernate.Engine.CascadingAction+RefreshCascadingAction on entity BookWarehouse.Repository.Models.SupplierContact: SELECT supplierco0_.Id as id1_0_0_, supplierco0_.ContactType as contacttype2_0_0_, supplierco0_.Value as value3_0_0_, supplierco0_.supplier_id as supplier4_0_0_ FROM supplier_contact supplierco0_ WHERE supplierco0_.Id=? 
DEBUG 15-10-2020 13:46:43 NHibernate.Persister.Entity.AbstractEntityPersister [1] - Static SQL for entity: BookWarehouse.Repository.Models.Supplier 
DEBUG 15-10-2020 13:46:43 NHibernate.Persister.Entity.AbstractEntityPersister [1] -  Version select: SELECT Id FROM supplier WHERE Id = ? 
DEBUG 15-10-2020 13:46:43 NHibernate.Persister.Entity.AbstractEntityPersister [1] -  Snapshot select: SELECT supplier_.Id, supplier_.Name as name2_1_, supplier_.Address as address3_1_, supplier_.City as city4_1_, supplier_.PostCode as postcode5_1_ FROM supplier supplier_ WHERE supplier_.Id=? 
DEBUG 15-10-2020 13:46:43 NHibernate.Persister.Entity.AbstractEntityPersister [1] -  Insert 0: INSERT INTO supplier (Name, Address, City, PostCode, Id) VALUES (?, ?, ?, ?, ?) 
DEBUG 15-10-2020 13:46:43 NHibernate.Persister.Entity.AbstractEntityPersister [1] -  Update 0: UPDATE supplier SET Name = ?, Address = ?, City = ?, PostCode = ? WHERE Id = ? 
DEBUG 15-10-2020 13:46:43 NHibernate.Persister.Entity.AbstractEntityPersister [1] -  Delete 0: DELETE FROM supplier WHERE Id = ? 
DEBUG 15-10-2020 13:46:43 NHibernate.Loader.Entity.AbstractEntityLoader [1] - Static select for entity BookWarehouse.Repository.Models.Supplier: SELECT supplier0_.Id as id1_1_0_, supplier0_.Name as name2_1_0_, supplier0_.Address as address3_1_0_, supplier0_.City as city4_1_0_, supplier0_.PostCode as postcode5_1_0_ FROM supplier supplier0_ WHERE supplier0_.Id=? 
DEBUG 15-10-2020 13:46:43 NHibernate.Loader.Entity.AbstractEntityLoader [1] - Static select for entity BookWarehouse.Repository.Models.Supplier: SELECT supplier0_.Id as id1_1_0_, supplier0_.Name as name2_1_0_, supplier0_.Address as address3_1_0_, supplier0_.City as city4_1_0_, supplier0_.PostCode as postcode5_1_0_ FROM supplier supplier0_ WHERE supplier0_.Id=? 
DEBUG 15-10-2020 13:46:43 NHibernate.Loader.Entity.AbstractEntityLoader [1] - Static select for entity BookWarehouse.Repository.Models.Supplier: SELECT supplier0_.Id as id1_1_0_, supplier0_.Name as name2_1_0_, supplier0_.Address as address3_1_0_, supplier0_.City as city4_1_0_, supplier0_.PostCode as postcode5_1_0_ FROM supplier supplier0_ with (updlock, rowlock) WHERE supplier0_.Id=? 
DEBUG 15-10-2020 13:46:43 NHibernate.Loader.Entity.AbstractEntityLoader [1] - Static select for entity BookWarehouse.Repository.Models.Supplier: SELECT supplier0_.Id as id1_1_0_, supplier0_.Name as name2_1_0_, supplier0_.Address as address3_1_0_, supplier0_.City as city4_1_0_, supplier0_.PostCode as postcode5_1_0_ FROM supplier supplier0_ with (updlock, rowlock, nowait) WHERE supplier0_.Id=? 
DEBUG 15-10-2020 13:46:43 NHibernate.Loader.Entity.AbstractEntityLoader [1] - Static select for entity BookWarehouse.Repository.Models.Supplier: SELECT supplier0_.Id as id1_1_0_, supplier0_.Name as name2_1_0_, supplier0_.Address as address3_1_0_, supplier0_.City as city4_1_0_, supplier0_.PostCode as postcode5_1_0_ FROM supplier supplier0_ with (updlock, rowlock) WHERE supplier0_.Id=? 
DEBUG 15-10-2020 13:46:43 NHibernate.Loader.Entity.AbstractEntityLoader [1] - Static select for action NHibernate.Engine.CascadingAction+MergeCascadingAction on entity BookWarehouse.Repository.Models.Supplier: SELECT supplier0_.Id as id1_1_0_, supplier0_.Name as name2_1_0_, supplier0_.Address as address3_1_0_, supplier0_.City as city4_1_0_, supplier0_.PostCode as postcode5_1_0_ FROM supplier supplier0_ WHERE supplier0_.Id=? 
DEBUG 15-10-2020 13:46:43 NHibernate.Loader.Entity.AbstractEntityLoader [1] - Static select for action NHibernate.Engine.CascadingAction+RefreshCascadingAction on entity BookWarehouse.Repository.Models.Supplier: SELECT supplier0_.Id as id1_1_0_, supplier0_.Name as name2_1_0_, supplier0_.Address as address3_1_0_, supplier0_.City as city4_1_0_, supplier0_.PostCode as postcode5_1_0_ FROM supplier supplier0_ WHERE supplier0_.Id=? 
DEBUG 15-10-2020 13:46:43 NHibernate.Loader.Collection.OneToManyLoader [1] - Static select for one-to-many BookWarehouse.Repository.Models.Supplier.Contact: SELECT contact0_.id as id1_0_1_, contact0_.Id as id1_0_0_, contact0_.ContactType as contacttype2_0_0_, contact0_.Value as value3_0_0_, contact0_.supplier_id as supplier4_0_0_ FROM supplier_contact contact0_ WHERE contact0_.id=? 
DEBUG 15-10-2020 13:46:43 NHibernate.Impl.SessionFactoryObjectFactory [1] - initializing class SessionFactoryObjectFactory 
DEBUG 15-10-2020 13:46:43 NHibernate.Impl.SessionFactoryObjectFactory [1] - registered: 5edaff306748438795d449a1d59332ad(unnamed) 
INFO  15-10-2020 13:46:43 NHibernate.Impl.SessionFactoryObjectFactory [1] - no name configured 
DEBUG 15-10-2020 13:46:43 NHibernate.Impl.SessionFactoryImpl [1] - Instantiated session factory 
DEBUG 15-10-2020 13:46:43 NHibernate.Impl.SessionFactoryImpl [1] - Checking 0 named HQL queries 
DEBUG 15-10-2020 13:46:43 NHibernate.Impl.SessionFactoryImpl [1] - Checking 0 named SQL queries 
INFO  15-10-2020 13:46:45 Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager [1] - User profile is available. Using 'C:\Users\acer\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest. 
INFO  15-10-2020 13:46:47 Microsoft.AspNetCore.Hosting.Internal.WebHost [16] - Request starting HTTP/1.1 GET https://localhost:5001/api/docs/index.html   
INFO  15-10-2020 13:46:47 Microsoft.AspNetCore.Hosting.Internal.WebHost [16] - Request starting HTTP/1.1 GET https://localhost:5001/api/docs/index.html   
INFO  15-10-2020 13:46:47 Microsoft.AspNetCore.Hosting.Internal.WebHost [16] - Request finished in 301.635ms 200 text/html 
INFO  15-10-2020 13:46:47 Microsoft.AspNetCore.Hosting.Internal.WebHost [16] - Request finished in 301.635ms 200 text/html 
INFO  15-10-2020 13:46:48 Microsoft.AspNetCore.Hosting.Internal.WebHost [7] - Request starting HTTP/1.1 GET https://localhost:5001/api/docs/v1/swagger.json   
INFO  15-10-2020 13:46:48 Microsoft.AspNetCore.Hosting.Internal.WebHost [7] - Request starting HTTP/1.1 GET https://localhost:5001/api/docs/v1/swagger.json   
INFO  15-10-2020 13:46:48 Microsoft.AspNetCore.Hosting.Internal.WebHost [7] - Request finished in 267.9759ms 200 application/json;charset=utf-8 
INFO  15-10-2020 13:46:48 Microsoft.AspNetCore.Hosting.Internal.WebHost [7] - Request finished in 267.9759ms 200 application/json;charset=utf-8 
